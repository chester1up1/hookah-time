{"version":3,"sources":["img/x.svg","img/logo.svg","img/item1.svg","img/item2.svg","img/item3.svg","img/item4.svg","img/item5.svg","img/item6.svg","img/instagram.svg","img/telegram.svg","img/facebook.svg","img/ok.svg","containers/Main/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Main","useState","modal","setModal","order","setOrder","toggle","goOrder","className","src","logo","alt","item1","item2","item3","item4","item5","item6","Button","color","onClick","Modal","isOpen","ModalBody","x","type","placeholder","ok","href","target","instagram","telegram","facebook","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.40e94717.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/x.9fbab349.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ca009a46.svg\";","module.exports = __webpack_public_path__ + \"static/media/item1.dcae4514.svg\";","module.exports = __webpack_public_path__ + \"static/media/item2.ce62faa9.svg\";","module.exports = __webpack_public_path__ + \"static/media/item3.baa1ecc0.svg\";","module.exports = __webpack_public_path__ + \"static/media/item4.5a1cf82b.svg\";","module.exports = __webpack_public_path__ + \"static/media/item5.064afa8f.svg\";","module.exports = __webpack_public_path__ + \"static/media/item6.bc0e14e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.583ec194.svg\";","module.exports = __webpack_public_path__ + \"static/media/telegram.c74249cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.4956b695.svg\";","module.exports = __webpack_public_path__ + \"static/media/ok.474a8f9e.svg\";","import React,{useState} from 'react';\r\nimport logo from '../../img/logo.svg'\r\nimport item1 from '../../img/item1.svg'\r\nimport item2 from '../../img/item2.svg'\r\nimport item3 from '../../img/item3.svg'\r\nimport item4 from '../../img/item4.svg'\r\nimport item5 from '../../img/item5.svg'\r\nimport item6 from '../../img/item6.svg'\r\nimport instagram from '../../img/instagram.svg'\r\nimport telegram from '../../img/telegram.svg'\r\nimport facebook from '../../img/facebook.svg'\r\nimport x from '../../img/x.svg'\r\nimport ok from '../../img/ok.svg'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport './style.css'\r\n\r\nexport const Main = () =>{\r\n  const [modal, setModal] = useState(false);\r\n  const [order, setOrder] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const goOrder = () => {\r\n    setOrder(!order);\r\n    setModal(false);\r\n  }\r\n  return(\r\n    <div className='all'>\r\n      <div className='Main'>\r\n        <div className='Header'>\r\n          <img className='logo' src={logo} alt='logo'/>\r\n          <p className='Title'>КАЛЬЯН НА ВИНІС</p>\r\n          <p className='Text'>СМАЧНИЙ ТА ДИМНИЙ КАЛЬЯН У ТВОЄМУ МІСТІ</p>\r\n        </div>\r\n        <div className='Services'>\r\n          <div className='ServicesBody'>\r\n            <p className='Title'>НАШІ ПОСЛУГИ ДОСТАВКИ КАЛЬЯНІВ</p>\r\n            <div className='Items'>\r\n              <div className='item'>\r\n                <p>НА ВАШЕ СВЯТО</p>\r\n                <img src={item1} alt='item'/>\r\n              </div>\r\n              <div className='item'>\r\n                <p>ДО ВАШОЇ ОСЕЛІ</p>\r\n                <img src={item2} alt='item'/>\r\n              </div>\r\n              <div className='item'>\r\n                <p>НА ПРИРОДУ</p>\r\n                <img src={item3} alt='item'/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='Services'>\r\n          <div className='ServicesBody'>\r\n            <p className='Title'>ВЕЛИКИЙ АСОРТИМЕНТ </p>\r\n            <div className='Items'>\r\n              <div className='item'>\r\n                <p>КАЛЬЯНІВ</p>\r\n                <img src={item4} alt='item'/>\r\n              </div>\r\n              <div className='item'>\r\n                <p>ТАБАКА</p>\r\n                <img src={item5} alt='item'/>\r\n              </div>\r\n              <div className='item'>\r\n                <p>ФРУКТОВИХ ЧАШ</p>\r\n                <img src={item6} alt='item'/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='buttonBox'>\r\n          <Button className='btn_label' color=\"success\" onClick={toggle}>\r\n            <p>ЗАМОВИТИ</p>\r\n          </Button>\r\n          <Modal isOpen={modal} toggle={toggle} className='orderModal'>\r\n            <ModalBody>\r\n              <div>\r\n                <img className='x_icon' src={x} alt=\"close\" onClick={toggle}/>\r\n                <p className='modalTitle '>контакти</p>\r\n                <p className='modalTitleText'>заповіть форму нище</p>\r\n              </div>\r\n              <div className='modalBody'>\r\n                <div className='modalItem'>\r\n                  <p>І’мя :</p>\r\n                  <input type='text' placeholder='введіть ім’я'/>\r\n                </div>\r\n                <div className='modalItem'>\r\n                  <p>E-mail :</p>\r\n                  <input type='text'  placeholder='введіть E-mail'/>\r\n                </div>\r\n                <div className='modalItem'>\r\n                  <p>Телефон :</p>\r\n                  <input type='text'  placeholder='введіть номер телефона'/>\r\n                </div>\r\n              </div>\r\n              <div className='modalBtnBox'>\r\n                <Button color=\"success\" className=\"modalBtn\" onClick={goOrder}>\r\n                  <p>\r\n                    ЗАМОВИТИ\r\n                  </p>\r\n                </Button>\r\n              </div>\r\n            </ModalBody>\r\n          </Modal>\r\n          <Modal isOpen={order} toggle={goOrder} className='orderGoModal'>\r\n            <ModalBody className='orderGoModalBody'>\r\n              <img className='x_icon_order' src={x} alt=\"close\" onClick={goOrder}/>\r\n              <p className='goOrderText'>Ваш запит в обробці.<br/>Очікуйте дзвінка нашого <br/> менеджера</p>\r\n              <img src={ok} alt='okay' className='ok_icon' onClick={goOrder}/>\r\n            </ModalBody>\r\n          </Modal>\r\n        </div>\r\n        <div className='footer'>\r\n          <div className='footer_item'> \r\n            <p className='title'>НАШІ КОНТАКТИ</p>\r\n            <p>+(380) 681709599</p>\r\n            <p>+(380) 735474455</p>\r\n            <p>MYDILIOCAT@GMAIL.COM</p>\r\n          </div>\r\n          <div className='footer_item'> \r\n            <a href='https://www.instagram.com/andrewmilashka/' target='blank'><img className='icon' src={instagram} alt='instagram'/></a>\r\n            <img className='icon' src={telegram} alt='telegram'/>\r\n            <img className='icon' src={facebook} alt='facebook'/>\r\n          </div>\r\n          <div className='footer_item'> \r\n            <p>М.ДРОГОБИЧ ВУЛ П.ОРЛИКА 7</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport { Main } from './containers/Main/Main';\n\nfunction App() {\n  return (\n   <Main/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}